// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: card.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Deviant {

  /// <summary>Holder for reflection information generated from card.proto</summary>
  public static partial class CardReflection {

    #region Descriptor
    /// <summary>File descriptor for card.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpjYXJkLnByb3RvEgdEZXZpYW50GhFjYXJkX2FjdGlvbi5wcm90bxoPY2Fy",
            "ZF90eXBlLnByb3RvItABCgRDYXJkEgoKAmlkGAEgASgJEhIKCmluc3RhbmNl",
            "SWQYAiABKAkSDgoGYmFja0lkGAMgASgJEgwKBGNvc3QYBCABKAUSDgoGZGFt",
            "YWdlGAUgASgFEg0KBXRpdGxlGAYgASgJEg4KBmZsYXZvchgHIAEoCRITCgtk",
            "ZXNjcmlwdGlvbhgIIAEoCRIgCgV0eXBlcxgJIAMoDjIRLkRldmlhbnQuQ2Fy",
            "ZFR5cGUSJAoHYWN0aW9ucxgKIAMoCzITLkRldmlhbnQuQ2FyZEFjdGlvbkIL",
            "WgkuO2RldmlhbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Deviant.CardActionReflection.Descriptor, global::Deviant.CardTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Deviant.Card), global::Deviant.Card.Parser, new[]{ "Id", "InstanceId", "BackId", "Cost", "Damage", "Title", "Flavor", "Description", "Types_", "Actions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Card : pb::IMessage<Card> {
    private static readonly pb::MessageParser<Card> _parser = new pb::MessageParser<Card>(() => new Card());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Card> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deviant.CardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card(Card other) : this() {
      id_ = other.id_;
      instanceId_ = other.instanceId_;
      backId_ = other.backId_;
      cost_ = other.cost_;
      damage_ = other.damage_;
      title_ = other.title_;
      flavor_ = other.flavor_;
      description_ = other.description_;
      types_ = other.types_.Clone();
      actions_ = other.actions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card Clone() {
      return new Card(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private string instanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backId" field.</summary>
    public const int BackIdFieldNumber = 3;
    private string backId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackId {
      get { return backId_; }
      set {
        backId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 4;
    private int cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 5;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flavor" field.</summary>
    public const int FlavorFieldNumber = 7;
    private string flavor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Flavor {
      get { return flavor_; }
      set {
        flavor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 8;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "types" field.</summary>
    public const int Types_FieldNumber = 9;
    private static readonly pb::FieldCodec<global::Deviant.CardType> _repeated_types_codec
        = pb::FieldCodec.ForEnum(74, x => (int) x, x => (global::Deviant.CardType) x);
    private readonly pbc::RepeatedField<global::Deviant.CardType> types_ = new pbc::RepeatedField<global::Deviant.CardType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardType> Types_ {
      get { return types_; }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(82, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> actions_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> Actions {
      get { return actions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Card);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Card other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (InstanceId != other.InstanceId) return false;
      if (BackId != other.BackId) return false;
      if (Cost != other.Cost) return false;
      if (Damage != other.Damage) return false;
      if (Title != other.Title) return false;
      if (Flavor != other.Flavor) return false;
      if (Description != other.Description) return false;
      if(!types_.Equals(other.types_)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (BackId.Length != 0) hash ^= BackId.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Flavor.Length != 0) hash ^= Flavor.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= types_.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceId);
      }
      if (BackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BackId);
      }
      if (Cost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cost);
      }
      if (Damage != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Damage);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (Flavor.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Flavor);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Description);
      }
      types_.WriteTo(output, _repeated_types_codec);
      actions_.WriteTo(output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (BackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackId);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Flavor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Flavor);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += types_.CalculateSize(_repeated_types_codec);
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Card other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.BackId.Length != 0) {
        BackId = other.BackId;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Flavor.Length != 0) {
        Flavor = other.Flavor;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      types_.Add(other.types_);
      actions_.Add(other.actions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            InstanceId = input.ReadString();
            break;
          }
          case 26: {
            BackId = input.ReadString();
            break;
          }
          case 32: {
            Cost = input.ReadInt32();
            break;
          }
          case 40: {
            Damage = input.ReadInt32();
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 58: {
            Flavor = input.ReadString();
            break;
          }
          case 66: {
            Description = input.ReadString();
            break;
          }
          case 74:
          case 72: {
            types_.AddEntriesFrom(input, _repeated_types_codec);
            break;
          }
          case 82: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
