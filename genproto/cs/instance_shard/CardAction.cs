// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: card_action.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Deviant {

  /// <summary>Holder for reflection information generated from card_action.proto</summary>
  public static partial class CardActionReflection {

    #region Descriptor
    /// <summary>File descriptor for card_action.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CardActionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjYXJkX2FjdGlvbi5wcm90bxIHRGV2aWFudBoeY2FyZF9hY3Rpb25fc3Rh",
            "dHVzX3R5cGVzLnByb3RvGiFjYXJkX2FjdGlvbl90YXJnZXRpbmdfdHlwZXMu",
            "cHJvdG8aD2NhcmRfdHlwZS5wcm90byLdAwoKQ2FyZEFjdGlvbhIKCgJpZBgB",
            "IAEoCRIfCgR0eXBlGAIgASgOMhEuRGV2aWFudC5DYXJkVHlwZRIuCgZzdGF0",
            "dXMYAyABKA4yHi5EZXZpYW50LkNhcmRBY3Rpb25TdGF0dXNUeXBlcxI5Cg50",
            "YXJnZXRpbmdfdHlwZRgEIAEoDjIhLkRldmlhbnQuQ2FyZEFjdGlvblRhcmdl",
            "dGluZ1R5cGVzEh8KAnVwGAUgAygLMhMuRGV2aWFudC5DYXJkQWN0aW9uEiEK",
            "BGRvd24YBiADKAsyEy5EZXZpYW50LkNhcmRBY3Rpb24SIQoEbGVmdBgHIAMo",
            "CzITLkRldmlhbnQuQ2FyZEFjdGlvbhIiCgVyaWdodBgIIAMoCzITLkRldmlh",
            "bnQuQ2FyZEFjdGlvbhIkCgd1cF9sZWZ0GAkgAygLMhMuRGV2aWFudC5DYXJk",
            "QWN0aW9uEiUKCHVwX3JpZ2h0GAogAygLMhMuRGV2aWFudC5DYXJkQWN0aW9u",
            "EiYKCWRvd25fbGVmdBgLIAMoCzITLkRldmlhbnQuQ2FyZEFjdGlvbhInCgpk",
            "b3duX3JpZ2h0GAwgAygLMhMuRGV2aWFudC5DYXJkQWN0aW9uEg4KBm9yaWdp",
            "bhgNIAEoCEILWgkuO2RldmlhbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Deviant.CardActionStatusTypesReflection.Descriptor, global::Deviant.CardActionTargetingTypesReflection.Descriptor, global::Deviant.CardTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Deviant.CardAction), global::Deviant.CardAction.Parser, new[]{ "Id", "Type", "Status", "TargetingType", "Up", "Down", "Left", "Right", "UpLeft", "UpRight", "DownLeft", "DownRight", "Origin" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CardAction : pb::IMessage<CardAction> {
    private static readonly pb::MessageParser<CardAction> _parser = new pb::MessageParser<CardAction>(() => new CardAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deviant.CardActionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAction(CardAction other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      status_ = other.status_;
      targetingType_ = other.targetingType_;
      up_ = other.up_.Clone();
      down_ = other.down_.Clone();
      left_ = other.left_.Clone();
      right_ = other.right_.Clone();
      upLeft_ = other.upLeft_.Clone();
      upRight_ = other.upRight_.Clone();
      downLeft_ = other.downLeft_.Clone();
      downRight_ = other.downRight_.Clone();
      origin_ = other.origin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAction Clone() {
      return new CardAction(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Deviant.CardType type_ = global::Deviant.CardType.Attack;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Deviant.CardType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Deviant.CardActionStatusTypes status_ = global::Deviant.CardActionStatusTypes.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Deviant.CardActionStatusTypes Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "targeting_type" field.</summary>
    public const int TargetingTypeFieldNumber = 4;
    private global::Deviant.CardActionTargetingTypes targetingType_ = global::Deviant.CardActionTargetingTypes.Path;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Deviant.CardActionTargetingTypes TargetingType {
      get { return targetingType_; }
      set {
        targetingType_ = value;
      }
    }

    /// <summary>Field number for the "up" field.</summary>
    public const int UpFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_up_codec
        = pb::FieldCodec.ForMessage(42, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> up_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> Up {
      get { return up_; }
    }

    /// <summary>Field number for the "down" field.</summary>
    public const int DownFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_down_codec
        = pb::FieldCodec.ForMessage(50, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> down_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> Down {
      get { return down_; }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_left_codec
        = pb::FieldCodec.ForMessage(58, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> left_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> Left {
      get { return left_; }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_right_codec
        = pb::FieldCodec.ForMessage(66, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> right_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> Right {
      get { return right_; }
    }

    /// <summary>Field number for the "up_left" field.</summary>
    public const int UpLeftFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_upLeft_codec
        = pb::FieldCodec.ForMessage(74, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> upLeft_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> UpLeft {
      get { return upLeft_; }
    }

    /// <summary>Field number for the "up_right" field.</summary>
    public const int UpRightFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_upRight_codec
        = pb::FieldCodec.ForMessage(82, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> upRight_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> UpRight {
      get { return upRight_; }
    }

    /// <summary>Field number for the "down_left" field.</summary>
    public const int DownLeftFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_downLeft_codec
        = pb::FieldCodec.ForMessage(90, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> downLeft_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> DownLeft {
      get { return downLeft_; }
    }

    /// <summary>Field number for the "down_right" field.</summary>
    public const int DownRightFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_downRight_codec
        = pb::FieldCodec.ForMessage(98, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> downRight_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> DownRight {
      get { return downRight_; }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 13;
    private bool origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (TargetingType != other.TargetingType) return false;
      if(!up_.Equals(other.up_)) return false;
      if(!down_.Equals(other.down_)) return false;
      if(!left_.Equals(other.left_)) return false;
      if(!right_.Equals(other.right_)) return false;
      if(!upLeft_.Equals(other.upLeft_)) return false;
      if(!upRight_.Equals(other.upRight_)) return false;
      if(!downLeft_.Equals(other.downLeft_)) return false;
      if(!downRight_.Equals(other.downRight_)) return false;
      if (Origin != other.Origin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != global::Deviant.CardType.Attack) hash ^= Type.GetHashCode();
      if (Status != global::Deviant.CardActionStatusTypes.Empty) hash ^= Status.GetHashCode();
      if (TargetingType != global::Deviant.CardActionTargetingTypes.Path) hash ^= TargetingType.GetHashCode();
      hash ^= up_.GetHashCode();
      hash ^= down_.GetHashCode();
      hash ^= left_.GetHashCode();
      hash ^= right_.GetHashCode();
      hash ^= upLeft_.GetHashCode();
      hash ^= upRight_.GetHashCode();
      hash ^= downLeft_.GetHashCode();
      hash ^= downRight_.GetHashCode();
      if (Origin != false) hash ^= Origin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type != global::Deviant.CardType.Attack) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Status != global::Deviant.CardActionStatusTypes.Empty) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (TargetingType != global::Deviant.CardActionTargetingTypes.Path) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TargetingType);
      }
      up_.WriteTo(output, _repeated_up_codec);
      down_.WriteTo(output, _repeated_down_codec);
      left_.WriteTo(output, _repeated_left_codec);
      right_.WriteTo(output, _repeated_right_codec);
      upLeft_.WriteTo(output, _repeated_upLeft_codec);
      upRight_.WriteTo(output, _repeated_upRight_codec);
      downLeft_.WriteTo(output, _repeated_downLeft_codec);
      downRight_.WriteTo(output, _repeated_downRight_codec);
      if (Origin != false) {
        output.WriteRawTag(104);
        output.WriteBool(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != global::Deviant.CardType.Attack) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Status != global::Deviant.CardActionStatusTypes.Empty) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TargetingType != global::Deviant.CardActionTargetingTypes.Path) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TargetingType);
      }
      size += up_.CalculateSize(_repeated_up_codec);
      size += down_.CalculateSize(_repeated_down_codec);
      size += left_.CalculateSize(_repeated_left_codec);
      size += right_.CalculateSize(_repeated_right_codec);
      size += upLeft_.CalculateSize(_repeated_upLeft_codec);
      size += upRight_.CalculateSize(_repeated_upRight_codec);
      size += downLeft_.CalculateSize(_repeated_downLeft_codec);
      size += downRight_.CalculateSize(_repeated_downRight_codec);
      if (Origin != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAction other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != global::Deviant.CardType.Attack) {
        Type = other.Type;
      }
      if (other.Status != global::Deviant.CardActionStatusTypes.Empty) {
        Status = other.Status;
      }
      if (other.TargetingType != global::Deviant.CardActionTargetingTypes.Path) {
        TargetingType = other.TargetingType;
      }
      up_.Add(other.up_);
      down_.Add(other.down_);
      left_.Add(other.left_);
      right_.Add(other.right_);
      upLeft_.Add(other.upLeft_);
      upRight_.Add(other.upRight_);
      downLeft_.Add(other.downLeft_);
      downRight_.Add(other.downRight_);
      if (other.Origin != false) {
        Origin = other.Origin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Deviant.CardType) input.ReadEnum();
            break;
          }
          case 24: {
            Status = (global::Deviant.CardActionStatusTypes) input.ReadEnum();
            break;
          }
          case 32: {
            TargetingType = (global::Deviant.CardActionTargetingTypes) input.ReadEnum();
            break;
          }
          case 42: {
            up_.AddEntriesFrom(input, _repeated_up_codec);
            break;
          }
          case 50: {
            down_.AddEntriesFrom(input, _repeated_down_codec);
            break;
          }
          case 58: {
            left_.AddEntriesFrom(input, _repeated_left_codec);
            break;
          }
          case 66: {
            right_.AddEntriesFrom(input, _repeated_right_codec);
            break;
          }
          case 74: {
            upLeft_.AddEntriesFrom(input, _repeated_upLeft_codec);
            break;
          }
          case 82: {
            upRight_.AddEntriesFrom(input, _repeated_upRight_codec);
            break;
          }
          case 90: {
            downLeft_.AddEntriesFrom(input, _repeated_downLeft_codec);
            break;
          }
          case 98: {
            downRight_.AddEntriesFrom(input, _repeated_downRight_codec);
            break;
          }
          case 104: {
            Origin = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
