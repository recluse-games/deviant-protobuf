// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: card_action.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Deviant {

  /// <summary>Holder for reflection information generated from card_action.proto</summary>
  public static partial class CardActionReflection {

    #region Descriptor
    /// <summary>File descriptor for card_action.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CardActionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjYXJkX2FjdGlvbi5wcm90bxIHRGV2aWFudBoeY2FyZF9hY3Rpb25fc3Rh",
            "dHVzX3R5cGVzLnByb3RvGiFjYXJkX2FjdGlvbl90YXJnZXRpbmdfdHlwZXMu",
            "cHJvdG8aD2NhcmRfdHlwZS5wcm90byLWAwoKQ2FyZEFjdGlvbhIKCgJpZBgB",
            "IAEoCRIfCgR0eXBlGAIgASgOMhEuRGV2aWFudC5DYXJkVHlwZRIuCgZzdGF0",
            "dXMYAyABKA4yHi5EZXZpYW50LkNhcmRBY3Rpb25TdGF0dXNUeXBlcxI5Cg50",
            "YXJnZXRpbmdfdHlwZRgEIAEoDjIhLkRldmlhbnQuQ2FyZEFjdGlvblRhcmdl",
            "dGluZ1R5cGVzEiIKBW5vcnRoGAUgAygLMhMuRGV2aWFudC5DYXJkQWN0aW9u",
            "EiIKBXNvdXRoGAYgAygLMhMuRGV2aWFudC5DYXJkQWN0aW9uEiEKBGVhc3QY",
            "ByADKAsyEy5EZXZpYW50LkNhcmRBY3Rpb24SIQoEd2VzdBgIIAMoCzITLkRl",
            "dmlhbnQuQ2FyZEFjdGlvbhInCgpub3J0aF9lYXN0GAkgAygLMhMuRGV2aWFu",
            "dC5DYXJkQWN0aW9uEicKCm5vcnRoX3dlc3QYCiADKAsyEy5EZXZpYW50LkNh",
            "cmRBY3Rpb24SJwoKc291dGhfZWFzdBgLIAMoCzITLkRldmlhbnQuQ2FyZEFj",
            "dGlvbhInCgpzb3V0aF93ZXN0GAwgAygLMhMuRGV2aWFudC5DYXJkQWN0aW9u",
            "QgtaCS47ZGV2aWFudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Deviant.CardActionStatusTypesReflection.Descriptor, global::Deviant.CardActionTargetingTypesReflection.Descriptor, global::Deviant.CardTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Deviant.CardAction), global::Deviant.CardAction.Parser, new[]{ "Id", "Type", "Status", "TargetingType", "North", "South", "East", "West", "NorthEast", "NorthWest", "SouthEast", "SouthWest" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CardAction : pb::IMessage<CardAction> {
    private static readonly pb::MessageParser<CardAction> _parser = new pb::MessageParser<CardAction>(() => new CardAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deviant.CardActionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAction(CardAction other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      status_ = other.status_;
      targetingType_ = other.targetingType_;
      north_ = other.north_.Clone();
      south_ = other.south_.Clone();
      east_ = other.east_.Clone();
      west_ = other.west_.Clone();
      northEast_ = other.northEast_.Clone();
      northWest_ = other.northWest_.Clone();
      southEast_ = other.southEast_.Clone();
      southWest_ = other.southWest_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAction Clone() {
      return new CardAction(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Deviant.CardType type_ = global::Deviant.CardType.Attack;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Deviant.CardType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Deviant.CardActionStatusTypes status_ = global::Deviant.CardActionStatusTypes.Unblocked;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Deviant.CardActionStatusTypes Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "targeting_type" field.</summary>
    public const int TargetingTypeFieldNumber = 4;
    private global::Deviant.CardActionTargetingTypes targetingType_ = global::Deviant.CardActionTargetingTypes.Path;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Deviant.CardActionTargetingTypes TargetingType {
      get { return targetingType_; }
      set {
        targetingType_ = value;
      }
    }

    /// <summary>Field number for the "north" field.</summary>
    public const int NorthFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_north_codec
        = pb::FieldCodec.ForMessage(42, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> north_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> North {
      get { return north_; }
    }

    /// <summary>Field number for the "south" field.</summary>
    public const int SouthFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_south_codec
        = pb::FieldCodec.ForMessage(50, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> south_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> South {
      get { return south_; }
    }

    /// <summary>Field number for the "east" field.</summary>
    public const int EastFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_east_codec
        = pb::FieldCodec.ForMessage(58, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> east_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> East {
      get { return east_; }
    }

    /// <summary>Field number for the "west" field.</summary>
    public const int WestFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_west_codec
        = pb::FieldCodec.ForMessage(66, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> west_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> West {
      get { return west_; }
    }

    /// <summary>Field number for the "north_east" field.</summary>
    public const int NorthEastFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_northEast_codec
        = pb::FieldCodec.ForMessage(74, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> northEast_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> NorthEast {
      get { return northEast_; }
    }

    /// <summary>Field number for the "north_west" field.</summary>
    public const int NorthWestFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_northWest_codec
        = pb::FieldCodec.ForMessage(82, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> northWest_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> NorthWest {
      get { return northWest_; }
    }

    /// <summary>Field number for the "south_east" field.</summary>
    public const int SouthEastFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_southEast_codec
        = pb::FieldCodec.ForMessage(90, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> southEast_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> SouthEast {
      get { return southEast_; }
    }

    /// <summary>Field number for the "south_west" field.</summary>
    public const int SouthWestFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Deviant.CardAction> _repeated_southWest_codec
        = pb::FieldCodec.ForMessage(98, global::Deviant.CardAction.Parser);
    private readonly pbc::RepeatedField<global::Deviant.CardAction> southWest_ = new pbc::RepeatedField<global::Deviant.CardAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Deviant.CardAction> SouthWest {
      get { return southWest_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (TargetingType != other.TargetingType) return false;
      if(!north_.Equals(other.north_)) return false;
      if(!south_.Equals(other.south_)) return false;
      if(!east_.Equals(other.east_)) return false;
      if(!west_.Equals(other.west_)) return false;
      if(!northEast_.Equals(other.northEast_)) return false;
      if(!northWest_.Equals(other.northWest_)) return false;
      if(!southEast_.Equals(other.southEast_)) return false;
      if(!southWest_.Equals(other.southWest_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != global::Deviant.CardType.Attack) hash ^= Type.GetHashCode();
      if (Status != global::Deviant.CardActionStatusTypes.Unblocked) hash ^= Status.GetHashCode();
      if (TargetingType != global::Deviant.CardActionTargetingTypes.Path) hash ^= TargetingType.GetHashCode();
      hash ^= north_.GetHashCode();
      hash ^= south_.GetHashCode();
      hash ^= east_.GetHashCode();
      hash ^= west_.GetHashCode();
      hash ^= northEast_.GetHashCode();
      hash ^= northWest_.GetHashCode();
      hash ^= southEast_.GetHashCode();
      hash ^= southWest_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type != global::Deviant.CardType.Attack) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Status != global::Deviant.CardActionStatusTypes.Unblocked) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (TargetingType != global::Deviant.CardActionTargetingTypes.Path) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TargetingType);
      }
      north_.WriteTo(output, _repeated_north_codec);
      south_.WriteTo(output, _repeated_south_codec);
      east_.WriteTo(output, _repeated_east_codec);
      west_.WriteTo(output, _repeated_west_codec);
      northEast_.WriteTo(output, _repeated_northEast_codec);
      northWest_.WriteTo(output, _repeated_northWest_codec);
      southEast_.WriteTo(output, _repeated_southEast_codec);
      southWest_.WriteTo(output, _repeated_southWest_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != global::Deviant.CardType.Attack) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Status != global::Deviant.CardActionStatusTypes.Unblocked) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TargetingType != global::Deviant.CardActionTargetingTypes.Path) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TargetingType);
      }
      size += north_.CalculateSize(_repeated_north_codec);
      size += south_.CalculateSize(_repeated_south_codec);
      size += east_.CalculateSize(_repeated_east_codec);
      size += west_.CalculateSize(_repeated_west_codec);
      size += northEast_.CalculateSize(_repeated_northEast_codec);
      size += northWest_.CalculateSize(_repeated_northWest_codec);
      size += southEast_.CalculateSize(_repeated_southEast_codec);
      size += southWest_.CalculateSize(_repeated_southWest_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAction other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != global::Deviant.CardType.Attack) {
        Type = other.Type;
      }
      if (other.Status != global::Deviant.CardActionStatusTypes.Unblocked) {
        Status = other.Status;
      }
      if (other.TargetingType != global::Deviant.CardActionTargetingTypes.Path) {
        TargetingType = other.TargetingType;
      }
      north_.Add(other.north_);
      south_.Add(other.south_);
      east_.Add(other.east_);
      west_.Add(other.west_);
      northEast_.Add(other.northEast_);
      northWest_.Add(other.northWest_);
      southEast_.Add(other.southEast_);
      southWest_.Add(other.southWest_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Deviant.CardType) input.ReadEnum();
            break;
          }
          case 24: {
            Status = (global::Deviant.CardActionStatusTypes) input.ReadEnum();
            break;
          }
          case 32: {
            TargetingType = (global::Deviant.CardActionTargetingTypes) input.ReadEnum();
            break;
          }
          case 42: {
            north_.AddEntriesFrom(input, _repeated_north_codec);
            break;
          }
          case 50: {
            south_.AddEntriesFrom(input, _repeated_south_codec);
            break;
          }
          case 58: {
            east_.AddEntriesFrom(input, _repeated_east_codec);
            break;
          }
          case 66: {
            west_.AddEntriesFrom(input, _repeated_west_codec);
            break;
          }
          case 74: {
            northEast_.AddEntriesFrom(input, _repeated_northEast_codec);
            break;
          }
          case 82: {
            northWest_.AddEntriesFrom(input, _repeated_northWest_codec);
            break;
          }
          case 90: {
            southEast_.AddEntriesFrom(input, _repeated_southEast_codec);
            break;
          }
          case 98: {
            southWest_.AddEntriesFrom(input, _repeated_southWest_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
